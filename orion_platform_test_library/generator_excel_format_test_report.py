
import xlsxwriter
from time import gmtime, strftime


def generate_excel_format_test_report(report_header, report_data, report_name, report_sheet_name):
    # this function is for generate excel format test report
    # # report file name is generated by time plus '-test_report.xlsx', that's NOT overwritten by new report
    # # argument report_header is for excel header
    # # argument report_data is information of test case, include test data, test result, and that you want
    # # argument report_sheet_name is excel sheet name for each API test
    # # data structure of report_header and report_data is list in python

    # create report file
    # todo: write api test into different excel sheet,
    # file_path = '../test_report_format_excel/'
    # file_name = file_path + strftime("%Y-%m-%d", gmtime()) + '-test_report.xlsx'
    # file_name = file_path + strftime("%Y-%m-%d %H-%M-%S", gmtime()) + '-test_report.xlsx'
    file_path = './test_report_format_excel/'
    file_name = file_path + report_name + strftime("-%Y-%m-%d %H-%M", gmtime()) + '-test_report.xlsx'
    excel_report = xlsxwriter.Workbook(file_name)

    # # create excel sheet
    worksheet = excel_report.add_worksheet(name=report_sheet_name)
    bold = excel_report.add_format({'bold': True})

    # column number
    COLUMN = len(report_header)

    # # write excel header
    for index in range(COLUMN):
        worksheet.write(0, index, report_header[index], bold)

    # # write data to excel report
    for index_row in range(len(report_data)):
        for index_column in range(COLUMN):
            worksheet.write(index_row + 1, index_column, report_data[index_row][index_column])
    excel_report.close()


if __name__ == '__main__':
    report_header = ['Test Case#', 'Test Title', 'Test Summary', 'Test Steps', 'Test Data', 'Expected Result',
                     'Tested Result', 'Status', 'Note']
    report_data = [
        ['1', 'test get token with valid argument', 'get token api test', 'test_token_with_valid_arguments()',
         "{'userName': 'happy.mao.wang@gmail.com', 'password': 'test1234'}", 'success', 'sucess', 'pass',
         'None'],
        ['2', 'test get token with invalid argument', 'get token api test',
         'test_token_with_invalid_arguments()',
         "{'userName': 'mao.wang@gmail.com', 'password': 'test1234'}", 'fail', 'fail', 'pass', 'None']]
    report_sheet_name = 'TestGetToken'

    generate_excel_format_test_report(report_header, report_data, report_sheet_name)
